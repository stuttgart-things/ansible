---
playbooks:
  - name: kind
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        vars:
          ansible_user: sthings
          kind_cluster_name: kind1
          path_to_kubeconfig: "/home/{{ ansible_user }}/.kube/{{ kind_cluster_name }}"
          kind_version: 0.27.0 # datasource=github-tags depName=kubernetes-sigs/kind
          kubectl_version: 1.32.3 # datasource=github-tags depName=kubernetes/kubectl
          count_worker_nodes: 3
          count_controlplane_nodes: 1
          enable_ingress_ports: true
          enable_host_paths: true

          docker_install_compose: true
          install_kind: true
          deploy_cilium: true
          deploy_cert_manager: true
          deploy_ingress_nginx: true
          create_kind_cluster: true

        roles:
          - role: sthings.container.install_configure_docker

vars:
  - name: cilium-kind
    file: |
      ---
      deployment_namespace: kube-system
      cilium_version: v1.17.2

      helm_repositories:
        cilium:
          url: https://helm.cilium.io

      helm_releases:
        cilium:
          ref: cilium/cilium
          version: "{{ cilium_version }}"
          namespace: "{{ deployment_namespace }}"
          ignore: false
          wait: true
          release_values: |
            kubeProxyReplacement: true
            k8sServicePort: 6443
            k8sServiceHost: {{ cluster_name }}-control-plane
            routingMode: native
            ipv4NativeRoutingCIDR: {{ cilium_cids | default('10.244.0.0/16') }}
            l2announcements:
              enabled: true
              leaseDuration: "3s"
              leaseRenewDeadline: "1s"
              leaseRetryPeriod: "500ms"
            devices: ["eth0", "net0"]
            externalIPs:
              enabled: true
            autoDirectNodeRoutes: true
            operator:
              replicas: {{ cilium_replcias | default(2) }}

      crd_checks:
        - "ciliumloadbalancerippools.cilium.io"
        - "ciliuml2announcementpolicies.cilium.io"

      post_manifests:
        CiliumLoadBalancerIPPool:
          apiVersion: "cilium.io/v2alpha1"
          kind: CiliumLoadBalancerIPPool
          metadata:
            name: ip-pool
          spec:
            blocks:
              - start: "{{ ipRangeStart | default('172.18.250.0') }}"
                stop: "{{ ipRangeEnd | default('172.18.250.50') }}"
        ciliumL2AnnouncementPolicy:
          apiVersion: cilium.io/v2alpha1
          kind: CiliumL2AnnouncementPolicy
          metadata:
            name: default-l2-announcement-policy
            namespace: "{{ deployment_namespace }}"
          spec:
            externalIPs: false
            loadBalancerIPs: true
            interfaces:
              - ^eth[0-9]+
            nodeSelector:
              matchExpressions:
              - key: node-role.kubernetes.io/control-plane
                operator: DoesNotExist


  - name: cert-manager-kind
    file: |
      ---
      deployment_namespace: cert-manager
      helm_repositories:
        cert-manager:
          url: https://charts.jetstack.io

      helm_releases:
        cert-manager:
          ref: cert-manager/cert-manager
          version: "{{ cert_manager_version | default('v1.16.0') }}"
          namespace: "{{ deployment_namespace }}"
          ignore: false
          wait: true
          release_values: |
            installCRDs: true

      post_manifests:
        cluster-issuer:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: selfsigned
          spec:
              selfSigned: {}

  - name: ingress-nginx-kind
    file: |
      ---
      ingress_nginx_version: 4.11.2
      deployment_namespace: ingress-nginx
      helm_repositories:
        ingress-nginx:
          url: https://kubernetes.github.io/ingress-nginx
      helm_releases:
        ingress-nginx:
          ref: ingress-nginx/ingress-nginx
          version: "{{ ingress_nginx_version }}"
          namespace: "{{ deployment_namespace }}"
          ignore: false
          wait: true
          release_values: |
            controller:
              nodeSelector:
                ingress-ready: "true"
                node-role.kubernetes.io/control-plane: ""
              tolerations:
                - key: "node-role.kubernetes.io/control-plane"
                  operator: "Exists"
                  effect: "NoSchedule"
              service:
                type: NodePort
              admissionWebhooks:
                enabled: false
              hostPort:
                enabled: true
