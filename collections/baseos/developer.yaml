---
playbooks:
  - name: dev
    play: |
      ---
      - name: Install binaries
        ansible.builtin.import_playbook: sthings.baseos.binaries

      - name: Install ansible
        ansible.builtin.import_playbook: sthings.baseos.ansible

      - name: Install golang
        ansible.builtin.import_playbook: sthings.baseos.golang

      - name: Install pre_commit
        ansible.builtin.import_playbook: sthings.baseos.pre_commit

      - name: Install semantic_release
        ansible.builtin.import_playbook: sthings.baseos.semantic_release

  - name: ansible
    play: |
      ---
      - name: Install python, virtualenv & ansible
        hosts: all
        become: true
        vars:
          developer: sthings
          bashrc_path: "/home/{{ developer }}/.bashrc"
          developer_user_dir: "/home/{{ developer }}"
          python_modules:
            - name: ansible
              version: 10.4.0
            - name: kubernetes
              version: 31.0.0
            - name: openshift
              version: 0.13.2
            - name: hvac[parser]
              version: 2.3.0
            - name: pyvmomi
              version: 8.0.3.0.1
          sthings_ansible_requirements: https://raw.githubusercontent.com/stuttgart-things/ansible/main/requirements.yaml

        tasks:
          - name: Update package cache
            ansible.builtin.apt:
              update_cache: yes
            when: ansible_os_family == 'Debian'

          - name: Install Python3 and venv
            ansible.builtin.package:
              name:
                - python3
                - python3-venv
              state: present

          - name: Create venv for ansible
            ansible.builtin.shell: |
              python3 -m venv ansible-venv
            args:
              chdir: "{{ developer_user_dir }}"
              creates: "{{ developer_user_dir }}/ansible-venv"
            become: yes
            become_user: "{{ developer }}"

          - name: Install pip
            ansible.builtin.shell: |
              . ansible-venv/bin/activate
              pip install --upgrade pip
            args:
              chdir: "{{ developer_user_dir }}"
            become: yes
            become_user: "{{ developer }}"

          - name: Install required Python modules in venv
            ansible.builtin.pip:
              name: "{{ item.name }}=={{ item.version }}"
              virtualenv: "{{ developer_user_dir }}/ansible-venv"
            loop: "{{ python_modules }}"
            become: yes
            become_user: "{{ developer }}"

          - name: Add venv activation to bashrc
            ansible.builtin.lineinfile:
              path: "{{ bashrc_path }}"
              line: 'source {{ developer_user_dir }}/ansible-venv/bin/activate'
              create: yes
              state: present
            become: yes
            become_user: "{{ developer }}"

          - name: Download sthings ansible requirements file from git
            uri:
              url: "{{ sthings_ansible_requirements }}"
              dest: /tmp/requirements.yaml

          - name: Install ansible requirements
            ansible.builtin.shell: |
              . ansible-venv/bin/activate
              ansible --version
              ansible-galaxy install -r /tmp/requirements.yaml -f
            args:
              chdir: "{{ developer_user_dir }}"
            become: yes
            become_user: "{{ developer }}"

  - name: pre_commit
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        gather_facts: true

        tasks:
          - name: Install pre-commit
            ansible.builtin.package:
              name: pre-commit
              state: present
              update_cache: yes

  - name: semantic_release
    play: |
      ---
      - hosts: "{{ target_host | default('all') }}"
        become: true
        gather_facts: true

        vars:
          developer: sthings
          nvm_version: 0.40.1
          npm_packages:
            - semantic-release
            - "@semantic-release/commit-analyzer"
            - "@semantic-release/release-notes-generator"
            - "@semantic-release/changelog"
            - "@semantic-release/git"
            - "@semantic-release/github"
            - "@semantic-release/gitlab"

        tasks:
          - name: Install npm
            ansible.builtin.package:
              name: npm
              state: present
              update_cache: yes

          - name: Download and install NVM
            ansible.builtin.shell: |
              curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v{{ nvm_version }}/install.sh | bash
            args:
              creates: ~/.nvm/nvm.sh
            become: yes
            become_user: "{{ developer }}"

          - name: Install and use Node.js 20
            ansible.builtin.shell: |
              source ~/.nvm/nvm.sh
              nvm install 20
              nvm use 20
            args:
              executable: /bin/bash
            become: yes
            become_user: "{{ developer }}"

          - name: Install NPM packages globally for {{ developer }}
            ansible.builtin.shell: |
              source ~/.nvm/nvm.sh
              npm install -g --save-dev {{ item }}
            loop: "{{ npm_packages }}"
            args:
              executable: /bin/bash
            become: yes
            become_user: "{{ developer }}"
